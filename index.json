[{"content":"Virtual DOM 이란? UI의 가상적 표현을 메모리에 저장하고, ReactDOM 같은 라이브러리에 의해 실제 DOM과 동기화하는 프로그래밍 개념으로, 이러한 일련의 과정을 재조정 이라고 합니다. 이 접근방식이 React의 선언적 API를 가능하게 합니다. React에게 원하는 UI의 상태를 알려주면 DOM이 그 상태와 일치하게 됩니다. React가 Virtual DOM 사용하는 법 기존에 javaScript에서 어떤 식으로 DOM 조작을 했을까요?\ndocument.querySelector(\u0026#39;.example\u0026#39;).style.backgroundColor = \u0026#39;red\u0026#39;; 위 코드를 보면 example 이라는 클래스의 스타일 값만 변경해주는 것 처럼 보이지만, 실제로 DOM에서는 example 클래스에 해당하는 엘리먼트와 자식 엘리먼트들을 삭제하고 background-color = 'red' 가 적용 된 새로운 엘리먼트로 대체된 후에 다시 새로 렌더링하여 브라우저에 그려지게 됩니다.\n리액트는 Virtual DOM을 아주 잘 활용하는데, 변경된 엘리먼트와 자식 엘리먼트만 리렌더링하여 메모리 효율을 높입니다. 가상 DOM (Virutal DOM) 작동 단계별 프로세스 초기 렌더링: 앱이 시작되고 전체 UI가 가상 DOM으로 표현됩니다. React 요소가 생성되어 가상 구조로 렌더링됩니다.\n상태 및 속성 변경: 앱에서 상태 및 속성이 변경되면 React는 가상 DOM에서 영향을 받는 구성 요소를 다시 렌더링합니다. 실제 DOM에는 바로 영향이 가지 않습니다.\nDiff 알고리즘으로 비교: 현재 버전의 가상DOM과 이전 버전 가상DOM을 비교하여 버전 간의 차이점을 식별합니다.\n조정 프로세스: 식별된 차이점을 기반으로 React는 실제 DOM을 업데이트 하는 가장 효율적인 방식으로 업데이트 해야하는 실제 DOM 부분만 변경됩니다. 그래서 성능적 이익을 챙길 수 있습니다.\n실제 DOM 업데이트: 마지막으로 실제 DOM에 필요한 변경 사항을 적용합니다. 웹 개발에서 가상 DOM을 사용하는 이유 단순화된 개발: 가상 DOM을 사용하면 추상화가 더 잘됩니다.\n향상된 성능: 실제 DOM을 직접 조작하는 것보다 성능상의 개선을 얻을 수 있습니다.\n향상된 사용자 경험: UI 업데이트가 매끄럽고 더 나은 UX에 기여합니다.\n크로스 플랫폼 개발: React Native도 비슷한 접근 방식을 이용하고 웹 및 모바일 플랫폼에서 코드를 재사용하여 개발 시간을 단축할 수 있습니다.\n","permalink":"https://tech.hyuk.dev/post/%EB%A6%AC%EC%95%A1%ED%8A%B8-virtual-dom/","summary":"\u003ch1 id=\"virtual-dom-이란\"\u003eVirtual DOM 이란?\u003c/h1\u003e\n\u003cp\u003eUI의 가상적 표현을 메모리에 저장하고, ReactDOM 같은 라이브러리에 의해 실제 DOM과 동기화하는 프로그래밍 개념으로, 이러한 일련의 과정을 \u003ccode\u003e재조정\u003c/code\u003e 이라고 합니다.\n이 접근방식이 React의 선언적 API를 가능하게 합니다. React에게 원하는 UI의 상태를 알려주면 DOM이 그 상태와 일치하게 됩니다.\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e\n\u003ch1 id=\"react가-virtual-dom-사용하는-법\"\u003eReact가 Virtual DOM 사용하는 법\u003c/h1\u003e\n\u003cp\u003e기존에 javaScript에서 어떤 식으로 DOM 조작을 했을까요?\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003equerySelector\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;.example\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003estyle\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebackgroundColor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;red\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e위 코드를 보면 \u003ccode\u003eexample\u003c/code\u003e 이라는 클래스의 스타일 값만 변경해주는 것 처럼 보이지만,\n실제로 DOM에서는 \u003ccode\u003eexample\u003c/code\u003e 클래스에 해당하는 엘리먼트와 자식 엘리먼트들을 삭제하고 \u003ccode\u003ebackground-color = 'red'\u003c/code\u003e 가 적용 된 새로운 엘리먼트로 대체된 후에 다시 새로 렌더링하여 브라우저에 그려지게 됩니다.\u003c/p\u003e","title":"Virtual DOM 정리노트"},{"content":"렉시컬 스코프란? 정적 스코프(Static scope) 라고도 불리는데 함수 호출이 아닌, 선언의 위치에 따라 결정되는 것을 의미합니다.\n예시 var x = 100; function one() { var x = 50; two(); } function two(){ console.log(x); } one(); // 100 two(); // 100 보통 one() 에서 50이 출력되고, two() 에서 100이 출력될 거라고 생각하는데\nJavaScript는 렉시컬 스코프(정적 스코프)를 따르기 때문에 전역 변수 x의 값을 따른 것이죠.\n2번째 예시 var x = 100; function two(){ console.log(x); } function one() { x = 50; two(); } two(); // 100 one(); // 50 하지만 one() 함수 내에서 재선언이 아닌, 값의 재할당을 한다면 50이 출력되는 것을 볼 수 있습니다.\n왜 이런 결과가 나오는 걸까? JavaScript는 실행 단계에서 스코프를 결정하는데,\nglobal , one(), two() 에 각각 존재하는 변수 x마다 우선순위가 정해집니다.\n그래서 예시1의 two()가 one() 안에 있다고해도 전역 변수 x의 값을 따르게 되는 것이죠.\n재선언의 경우에는 그렇게되고, 재할당을 하면\n전역 변수의 값이 변경되기 때문에 예시2처럼 변경된 값이 출력되는 것입니다.\n렉시컬 스코프의 반대는? 동적 스코프(Dynamic Scope)는 실행단계에서 상위 스코프가 정해지는 것과 달리,\n함수의 호출에 따라 상위 스코프가 정해집니다.\n","permalink":"https://tech.hyuk.dev/post/%EB%A0%89%EC%8B%9C%EC%BB%AC-%EC%8A%A4%EC%BD%94%ED%94%84/","summary":"\u003ch1 id=\"렉시컬-스코프란\"\u003e렉시컬 스코프란?\u003c/h1\u003e\n\u003cp\u003e\u003ccode\u003e정적 스코프(Static scope)\u003c/code\u003e 라고도 불리는데 함수 호출이 아닌, 선언의 위치에 따라 결정되는 것을 의미합니다.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"예시\"\u003e예시\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 100\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 100\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e보통 \u003ccode\u003eone()\u003c/code\u003e 에서 50이 출력되고, \u003ccode\u003etwo()\u003c/code\u003e 에서 100이 출력될 거라고 생각하는데\u003cbr\u003e\nJavaScript는 렉시컬 스코프(정적 스코프)를 따르기 때문에 전역 변수 x의 값을 따른 것이죠.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"2번째-예시\"\u003e2번째 예시\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 100\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 50\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e하지만 \u003ccode\u003eone()\u003c/code\u003e 함수 내에서 재선언이 아닌, 값의 재할당을 한다면 50이 출력되는 것을 볼 수 있습니다.\u003c/p\u003e","title":"렉시컬 스코프는 무엇인가요?"},{"content":"(이 포스팅은 javascript 기준으로 작성되었습니다.)\nthis 키워드란? this 키워드는 현재 내가 속해있는 객체를 가리킵니다.\nconst hello = { name : \u0026#34;이름\u0026#34;, world : function(){ return this.name} } console.log(hello.world()); // 출력값 : 이름 브라우저에서 this function test(){ return this; } console.log(window === test()); // true 위 코드를 브라우저에서 실행해보면, true가 출력됩니다. 윈도우 로컬 환경에서 실행해보면, 글로벌 객체가 출력됩니다.\n메소드 내부함수에서 this const test = { hello: function() { console.log(this); // test function hi() console.log(this); // window } } 메소드의 내부함수에서 this를 출력해보면 window가 나옵니다.\n콜백함수에서 this function cb(){ console.log(this); } function test(callback){ callback(); } test(cb); // window 출력 콜백함수 내에서 this를 출력해도 window가 나옵니다.\nthis를 선언한 적 없는데? 자바스크립트에서 함수는 arguments Object와 this를 묵시적으로 전달받습니다.\n","permalink":"https://tech.hyuk.dev/post/this-%ED%82%A4%EC%9B%8C%EB%93%9C/","summary":"\u003cp\u003e(이 포스팅은 javascript 기준으로 작성되었습니다.)\u003c/p\u003e\n\u003ch1 id=\"this-키워드란\"\u003ethis 키워드란?\u003c/h1\u003e\n\u003cp\u003ethis 키워드는 현재 내가 속해있는 객체를 가리킵니다.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;이름\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eworld\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eworld\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 출력값 : 이름\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c!-- raw HTML omitted --\u003e\n\u003ch1 id=\"브라우저에서-this\"\u003e브라우저에서 this\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// true\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e위 코드를 브라우저에서 실행해보면, true가 출력됩니다.\n윈도우 로컬 환경에서 실행해보면, 글로벌 객체가 출력됩니다.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch1 id=\"메소드-내부함수에서-this\"\u003e메소드 내부함수에서 this\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003etest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// test\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehi\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// window\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e메소드의 내부함수에서 this를 출력해보면 window가 나옵니다.\u003c/p\u003e","title":"this 키워드에 대해 알아봅시다."}]